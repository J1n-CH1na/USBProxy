name: build-binaries-nightly
on:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/build-**'
    branches: dev
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  # currently we do not use the files in rootfs because debian packaging works differently
  ROOT_FS: /usr/raspberry-build/rootfs

jobs:
  build-and-package:
    name: Build nesto-usbproxy debian package
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/usb-proxy-dev:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    steps:
    - uses: actions/checkout@v2
      with:
        path: 'usbproxy'
        ref: 'dev'

    - uses: actions/checkout@v2
      with:
        repository: fsaintjacques/semver-tool
        path: semver

    - name: Build semver utility
      run: |
        cd semver && make install

    - name: Create build directory
      run: |
        mkdir -p usbproxy/src/build

    - name: Create Makefiles using CMake
      working-directory: usbproxy/src/build
      run: |
        LDFLAGS="-L${STAGING_DIR}/usr/local/lib" \
        CFLAGS="-I${STAGING_DIR}/usr/local/include" \
        CXXFLAGS=$CFLAGS \
        PKG_CONFIG_PATH=$STAGING_DIR/usr/local/lib/pkgconfig \
        cmake \
        "-Daws-greengrass-core-sdk-c_DIR=${STAGING_DIR}/usr/local/lib/" \
        "-DCMAKE_PREFIX_PATH=$STAGING_DIR/usr/local" \
        "-DCMAKE_FIND_ROOT_PATH=$STAGING_DIR" \
        "-DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN_FILE" \
        "-DCMAKE_INSTALL_PREFIX=/usr" \
        "-DCMAKE_BUILD_TYPE=Release" \
        "-DUSE_LIBUSB1=1" \
        ..

    - name: Run make
      working-directory: usbproxy/src/build
      run: |
        make

    - name: Run make install
      working-directory: usbproxy/src/build
      run: |
        DESTDIR=${ROOT_FS} make install

    # TODO: move the devscripts installation into docker container image build
    - name: Change the package version to reflect a nightly build
      working-directory: usbproxy
      run: |
        VERSION=$(cat ./VERSION)
        NEW_VERSION=$(semver bump patch $VERSION)
        apt-get install -y devscripts
        cd ./src && dch -v ${NEW_VERSION}~$(date +%s)-${GITHUB_SHA}-${GITHUB_RUN_NUMBER} --distribution nightly "$(git log -1 --pretty=%B)" --force-distribution

    - name: Build the debian package
      working-directory: usbproxy/src
      run: |
        dpkg-buildpackage -d -aarmhf -tarm-rpi-linux-gnueabihf -uc -us

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: debian-package
        path: |
          usbproxy/*.deb

    - name: Create greengrass deployment package
      working-directory: usbproxy/src/build/greengrass/
      run: |
        zip usb-mitm.zip usb-mitm-gg

    - name: Upload Release Asset - Greengrass Deployment Package
      uses: actions/upload-artifact@v2
      with:
        name: greengrass-deployment-package
        path: |
          usbproxy/src/build/greengrass/usb-mitm.zip
          
    - name: Upload Release Asset - Standalone Binary
      uses: actions/upload-artifact@v2
      with:
        name: standalone-binary
        path: |
          usbproxy/src/build/tools/usb-mitm

    - name: Upload Release Asset - Debian Package
      uses: actions/upload-artifact@v2
      with:
        name: nesto-usbproxy_${{ steps.version.outputs.NEW_VERSION }}_armhf.deb
        path: |
          usbproxy/nesto-usbproxy_${{ steps.version.outputs.NEW_VERSION }}_armhf.deb

    - name: Release via gh releases with latest tag
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: nightly-latest
        prerelease: false
        title: UsbProxy - Nightly Binary Release (latest)
        files: |
          usbproxy/src/build/greengrass/usb-mitm-gg
          usbproxy/src/build/tools/usb-mitm

  upload-package:
    name: Upload nesto-usbproxy debian package into nesto repository in S3
    runs-on: ubuntu-latest
    needs: build-and-package
    container:
      image: ghcr.io/${{ github.repository_owner }}/aptly:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    steps:
    - name: Download debian package from artifacts
      uses: actions/download-artifact@v2
      with:
        name: debian-package

    - name: Add package to aptly
      env:
        APTLY_REPO: nesto-pos-adapter-devel
      run: |
        aptly repo add $APTLY_REPO nesto-usbproxy_*_armhf.deb

    - name: Prepare GPG private key password
      env:
        GPG_PRIVATE_KEY_PASSWD: ${{ secrets.GPG_PRIVATE_KEY_PASSWD }}
      run: |
        echo $GPG_PRIVATE_KEY_PASSWD > ./key_passwd

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSWD }}

    - name: Sign and upload to S3 
      env:
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aptly publish repo -batch=true -passphrase-file="./key_passwd" -gpg-key="$GPG_KEY_ID" -component=aws -distribution=nightly nesto-pos-adapter-devel s3:nesto-debian-repo-devel:
